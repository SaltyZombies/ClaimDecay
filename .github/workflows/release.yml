name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Tag
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Options: 'temurin', 'zulu', 'adopt', etc.
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Gradle Permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload JAR file
        uses: actions/upload-artifact@v4
        with:
          name: plugin-jar
          path: build/libs/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Extract Tag
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Download JAR file
        uses: actions/download-artifact@v4
        with:
          name: plugin-jar

      - name: Get Release ID
        id: get_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/SeanStoves/ClaimDecay/releases/tags/${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or Update Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: "Release notes for ${{ env.TAG_NAME }}"
          draft: false
          prerelease: false
          artifacts: ./*.jar
          skipIfReleaseExists: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.get_release.outputs.id == ''

      - name: Upload Asset to Existing Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./*.jar
          asset_name: ClaimDecay-${{env.TAG_NAME}}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.get_release.outputs.id != ''
